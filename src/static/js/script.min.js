var tl_starting, nav_animating = !1, nav_shrunk = !1, canvas_curr_width = 0, canvas_curr_height = 0, points = [], velocity2 = 12,canvas = document.getElementById("loader_canvas"), context = canvas.getContext("2d"), radius = 3, boundaryX = 156, boundaryY = 156, numberOfPoints = 40, isProcessing = !1, isFirstUse = !0, hasResult = !1, isAlive = !1, isLoaderShown = !1, width_limit = 2048, height_limit = 2048, hasTrimap = "true", runKNN = "true", scale_KNN = .5, isDebug = !1;
function init() {
    canvas_input = $("#canvas_input")[0],
    context_input = canvas_input.getContext("2d"),
    canvas_output = $("#canvas_output")[0],
    context_output = canvas_output.getContext("2d"),
    context_input.clearRect(0, 0, canvas_input.width, canvas_input.height),
    context_output.clearRect(0, 0, canvas_output.width, canvas_output.height),
    setUI()
}
function setUI() {
    $(window).scroll((function(e) {
        $(window).scrollTop() > 50 && !nav_shrunk && !nav_animating ? (nav_animating = !0,
        nav_shrunk = !0,
        isMobile ? TweenMax.to("nav", .3, {
            backgroundColor: "rgba(255, 255, 255, 1)",
            ease: Power2.easeInOut,
            onComplete: function() {
                nav_animating = !1
            }
        }) : (TweenMax.to("nav", .3, {
            height: "72px",
            backgroundColor: "rgba(255, 255, 255, 0.9)",
            ease: Power2.easeInOut,
            onComplete: function() {
                nav_animating = !1
            }
        }),
        TweenMax.to("nav ul", .3, {
            padding: "10px 0px 10px 0px",
            ease: Power2.easeInOut
        })),
        TweenMax.to("#nav_shadow", .3, {
            autoAlpha: 1,
            ease: Linear.easeNone
        })) : $(window).scrollTop() <= 50 && nav_shrunk && !nav_animating && (nav_animating = !0,
        nav_shrunk = !1,
        isMobile ? TweenMax.to("nav", .3, {
            backgroundColor: "rgba(255, 255, 255, 1)",
            ease: Power2.easeInOut,
            onComplete: function() {
                nav_animating = !1
            }
        }) : (TweenMax.to("nav", .3, {
            height: "108px",
            backgroundColor: "rgba(255, 255, 255, 1)",
            ease: Power2.easeInOut,
            onComplete: function() {
                nav_animating = !1
            }
        }),
        TweenMax.to("nav ul", .3, {
            padding: "20px 0px 30px 0px",
            ease: Power2.easeInOut
        })),
        TweenMax.to("#nav_shadow", .3, {
            autoAlpha: 0,
            ease: Linear.easeNone
        })),
        setNavSelected()
    }
    )),
    $(".bot_nav_txt").mouseover((function(e) {
        isMobile || TweenMax.to(e.target, .2, {
            color: "#999999",
            ease: Linear.easeNone
        })
    }
    )),
    $(".bot_nav_txt").mouseout((function(e) {
        isMobile || TweenMax.to(e.target, .2, {
            color: "#000000",
            ease: Linear.easeNone
        })
    }
    )),
    $(".bot_nav_txt").click((function(e) {
        var t = $(e.target).attr("id").split("_")[2];
        isMobile ? TweenMax.to(window, 1, {
            scrollTo: {
                y: "#sec_" + (parseInt(t) + 1),
                offsetY: 120
            },
            ease: Power2.easeInOut
        }) : TweenMax.to(window, 1, {
            scrollTo: "#sec_" + (parseInt(t) + 1),
            ease: Power2.easeInOut
        })
    }
    )),
    $("#bot_nav_logo_li, #bot_logo_mobile img").click((function(e) {
        TweenMax.to(window, 1, {
            scrollTo: 0,
            ease: Power2.easeInOut
        })
    }
    )),
    document.getElementById("input-foto").addEventListener("change", readFile, !1),
    $(".gen_bot").mousedown((function(e) {
        var t = e.currentTarget
          , a = function(e) {
            var t = document
              , a = window
              , n = t.body
              , o = void 0 !== a.pageXOffset ? a.pageXOffset : (t.documentElement || n.parentNode || n).scrollLeft
              , i = void 0 !== a.pageYOffset ? a.pageYOffset : (t.documentElement || n.parentNode || n).scrollTop
              , s = e.getBoundingClientRect();
            if (e !== n)
                for (var c = e.parentNode; c !== n; )
                    o += c.scrollLeft,
                    i += c.scrollTop,
                    c = c.parentNode;
            return {
                bottom: s.bottom + i,
                height: s.height,
                left: s.left + o,
                right: s.right + o,
                top: s.top + i,
                width: s.width
            }
        }(t)
          , n = t.querySelector(".ripple");
        $(n).remove(),
        (n = document.createElement("span")).className = "ripple",
        n.style.height = n.style.width = Math.max(a.width, a.height) + "px",
        t.appendChild(n);
        var o = e.pageY - a.top - n.offsetHeight / 2
          , i = e.pageX - a.left - n.offsetWidth / 2;
        return n.style.top = o + "px",
        n.style.left = i + "px",
        !1
    }
    )),
    isMobile || ($("body").on("dragstart", (function(e) {
        e.preventDefault(),
        e.stopPropagation()
    }
    )),
    $("body").on("dragover", (function(e) {
        e.preventDefault(),
        e.stopPropagation()
    }
    )),
    $("body").on("dragenter", (function(e) {
        e.preventDefault(),
        e.stopPropagation(),
        $("#drop_wrap").css("display", "flex"),
        $("#full_cover").css("display", "block"),
        
        TweenMax.to("#full_cover", .2, {
            autoAlpha: 1,
            ease: Linear.easeNone
        })
    }
    )),
    $("#full_cover").on("dragleave", (function(e) {
        e.preventDefault(),
        e.stopPropagation(),
        TweenMax.to("#full_cover", .2, {
            autoAlpha: 0,
            ease: Linear.easeNone,
            onComplete: function() {
                $("#full_cover").css("display", "none"),
                $("#drop_wrap").css("display", "none")
            }
        })
    }
    )),
    $("body").on("drop", (function(e) {
        if (e.originalEvent.dataTransfer && e.originalEvent.dataTransfer.files.length) {
            e.preventDefault(),
            e.stopPropagation(),
            TweenMax.to("#full_cover", .2, {
                autoAlpha: 0,
                ease: Linear.easeNone,
                onComplete: function() {
                    $("#full_cover").css("display", "none"),
                    $("#drop_wrap").css("display", "none")
                }
            });
            var t = {
                target: {}
            };
            t.target.files = e.originalEvent.dataTransfer.files,
            readFile(t)
        }
    }
    ))),
    $("#sec_1_bot_1").on("click", (function() {
        isProcessing,
        $("input[name=foto]").trigger("click")
    }
    )),
    $("#canvas_input, #sec_2_bot_1").on("click", (function() {
        isProcessing,
        $("input[name=foto]").trigger("click")
    }
    )),
    $("#sec_2_bot_2").on("click", (function() {
        if (hasResult) {
            var e = document.getElementById("canvas_output");
            $("#download_a").attr("href", e.toDataURL("image/png")).attr("download", "pic_ai.png"),
            $("#download_a")[0].click()
        }
    }
    )),
    $("#info_bot").on("click", (function() {
        isProcessing || hideInfoCont()
    }
    ));
    var e = new TimelineMax({
        delay: 2,
        repeatDelay: 2,
        repeat: -1
    });
    e.add(TweenMax.to("#sec_1_clip_img", 1.5, {
        clip: "rect(0px,300px,300px,300px)",
        onComplete: function() {
            $("#sec_1_clip_img").css("clip", "rect(0px,0px,300px,0px)")
        }
    }))
    
}

function readFile(e) {
    var t = e.target.files[0];
    loadImage(t, function(e) {
        var t = window.loadImage.scale(e, {
            canvas: !0
        });
        document.getElementById("form").appendChild(t),
        context_input.clearRect(0, 0, canvas_input.width, canvas_input.height),
        context_output.clearRect(0, 0, canvas_output.width, canvas_input.height),
        updateCanvasMeasures(t.width, t.height);
        var a = 0;
        t.width > t.height ? (a = t.width / canvas_input.width,
        context_input.drawImage(t, 0, 0, t.width, t.height, canvas_input.width - t.width / a, canvas_input.height - t.height / a, t.width / a, t.height / a)) : (a = t.height / canvas_input.height,
        context_input.drawImage(t, 0, 0, t.width, t.height, (canvas_input.width - t.width / a) / 2, (canvas_input.height - t.height / a) / 2, t.width / a, t.height / a))
        isFirstUse && (isFirstUse = !1,
        $("#canvas_input").css("background", "none"),
        $("#canvas_output").css("background", "none")),
        context_output.clearRect(0, 0, canvas_output.width, canvas_output.height),
        $("#sec_2_img_orig_dim").html(e.width + "x" + e.height + "px"),
        $("#sec_2_img_alpha_dim").html("&nbsp;"),
        sendCanvas()
    })
}

function sendImage() {
    isProcessing = !0;
    showLoader();
    
    var e = canvas_input.toDataURL()
      , t = {};
    t.img = e,
    $.ajax({
        url:"/",
        type: "post",
        data: JSON.stringify(t),
        contentType: "application/json",
        dataType: "json",
    }).done(function (jsondata,textStatus,jqXHR) {
        payload = jsondata
        updateCanvas(payload.img_with_bk)
        isProcessing = !1
        hideLoader()
        hasResult = !1
    })
    
}

function sendCanvas() {
    isProcessing = !0,
    showLoader();
    var e = canvas_input.toDataURL()
      , t = {};
    t.img = e
    $.ajax({
        url: "/",
        type: "post",
        data: JSON.stringify(t),
        crossDomain: !0,
        contentType: "application/json",
        dataType: "json",
        success: function(jsondata,textStatus,jqXHR) {
            hasResult = !0,
            payload = jsondata,
            updateCanvas(payload.img_with_bk)
        },        
        complete: function() {
            isProcessing = !1,
            hideLoader()
        }
    })
}

function sendCanvas() {
    isProcessing = !0,
    showLoader();
    var e = canvas_input.toDataURL()
      , t = {};
    t.img = e
    
    $.ajax({
        url: "/",
        type: "post",
        data: JSON.stringify(t),
        crossDomain: !0,
        contentType: "application/json",
        dataType: "json",
        success: function(jsondata,textStatus,jqXHR) {
            hasResult = !0,
            payload = jsondata,
            updateCanvas(payload.img_with_bk)
        },
        
        complete: function() {
            isProcessing = !1,
            hideLoader()
        }
    })
}


function updateCanvas(e) {
    var t = new Image;
    t.onload = function() {
        var e = t.width / canvas_output.width;
        context_output.drawImage(t, 0, 0, t.width, t.height, (canvas_output.width - t.width / e) / 2, (canvas_output.height - t.height / e) / 2, t.width / e, t.height / e);
        for (var a = context_output.getImageData(0, 0, canvas_output.width, canvas_output.height), n = new Uint32Array(a.data.buffer), o = 0, i = n.length; o < i; )
            n[o] = n[o++] << 8;
        context_output.globalCompositeOperation = "source-in",
        //context_output.putImageData(a,0,0),
        context_output.putImageData(a,0),
        context_output.drawImage(canvas_input, 0, 0),
        context_output.globalCompositeOperation = "source-over",
        $("#sec_2_img_alpha_dim").html(canvas_output.width + "x" + canvas_output.height + "px"),
        isMobile && TweenMax.to(window, 1, {
            scrollTo: {
                y: "#sec_2_canvas_wrap_2",
                offsetY: 120
            },
            ease: Power2.easeInOut
        })
    }
    ,
    t.src = "data:image/png;base64, " + e
}

function updateCanvasMeasures(e, t) {
    e < t ? t < height_limit ? (canvas_curr_height = t,
    canvas_curr_width = e) : (canvas_curr_height = height_limit,
    canvas_curr_width = e * (height_limit / t)) : e < width_limit ? (canvas_curr_width = e,
    canvas_curr_height = t) : (canvas_curr_width = width_limit,
    canvas_curr_height = t * (width_limit / e)),
    canvas_input.width = canvas_output.width = canvas_curr_width,
    canvas_input.height = canvas_output.height = canvas_curr_height,
    canvas_input.style.width = canvas_output.style.width = "auto",
    canvas_input.style.height = canvas_output.style.height = "auto"
}


function showLoader() {
    TweenMax.to("#full_cover_loader", .2, {
        autoAlpha: 1,
        ease: Linear.easeNone,
        onStart: function() {
            isLoaderShown = !0,
            $("#loader_wrap").css("display", "flex"),
            $("#full_cover_loader").css("display", "block")
        }
    })
}
function hideLoader() {
    TweenMax.to("#full_cover_loader", .2, {
        autoAlpha: 0,
        ease: Linear.easeNone,
        onComplete: function() {
            isLoaderShown = !1,
            $("#full_cover_loader").css("display", "none"),
            $("#loader_wrap").css("display", "none")
        }
    })
}

$((function() {
    init()
}
));
